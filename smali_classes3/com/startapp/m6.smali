.class public final Lcom/startapp/m6;
.super Ljava/lang/Object;
.source "SourceFile"


# static fields
.field public static volatile a:Ljava/lang/String;


# direct methods
.method public constructor <init>()V
    .locals 0

    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static a()Ljava/lang/String;
    .locals 3

    sget-object v0, Lcom/startapp/m6;->a:Ljava/lang/String;

    if-nez v0, :cond_1

    const-class v0, Lcom/startapp/m6;

    monitor-enter v0

    :try_start_0
    sget-object v1, Lcom/startapp/m6;->a:Ljava/lang/String;

    if-nez v1, :cond_0

    const-string v1, ""

    const/4 v2, 0x0

    invoke-static {v1, v2}, Landroid/util/Base64;->decode(Ljava/lang/String;I)[B

    move-result-object v1

    new-instance v2, Ljava/lang/String;

    invoke-direct {v2, v1}, Ljava/lang/String;-><init>([B)V

    sput-object v2, Lcom/startapp/m6;->a:Ljava/lang/String;

    :cond_0
    monitor-exit v0

    goto :goto_0

    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    :cond_1
    :goto_0
    sget-object v0, Lcom/startapp/m6;->a:Ljava/lang/String;

    return-object v0
.end method
